from django.core.management.base import BaseCommand
import time
import logging
from core.tasks import assign_florist_task, assign_courier_task

logger = logging.getLogger(__name__)

class Command(BaseCommand):
    help = '–ó–∞–ø—É—Å–∫–∞–µ—Ç —Ñ–æ–Ω–æ–≤—ã–π –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–¥–∞—á (–Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ —Ñ–ª–æ—Ä–∏—Å—Ç–æ–≤ –∏ –∫—É—Ä—å–µ—Ä–æ–≤)'

    def handle(self, *args, **options):
        self.stdout.write(self.style.SUCCESS('–§–æ–Ω–æ–≤—ã–π –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–ø—É—â–µ–Ω...'))
        try:
            while True:
                logger.info("üü¢ –¶–∏–∫–ª –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –Ω–∞—á–∞—Ç")

                assign_florist_task()
                assign_courier_task()

                logger.info("‚è≥ –ü–∞—É–∑–∞ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º —Ü–∏–∫–ª–æ–º...")
                time.sleep(60)  # –ü–æ–≤—Ç–æ—Ä—è—Ç—å –∫–∞–∂–¥—ã–µ 60 —Å–µ–∫—É–Ω–¥ (–º–æ–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å)

        except KeyboardInterrupt:
            logger.warning("‚õî –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤—Ä—É—á–Ω—É—é")
            self.stdout.write(self.style.WARNING('–§–æ–Ω–æ–≤—ã–π –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'))
